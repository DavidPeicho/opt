#version 450

layout(local_size_x = 1) in;

layout(set = 0, binding = 2, rgba16f) uniform writeonly image2D uTexture;

struct Ray {
  vec3 color;
};

layout(std430, set = 0, binding = 0) readonly buffer buf {
    vec3 colors[ ];
};

layout(std430, set = 0, binding = 1) buffer RayOut {
    Ray results[ ];
};

void main() {
  // vec3 c = colors[gl_GlobalInvocationID.x];
  // results[gl_GlobalInvocationID.x].color = c;
  ivec2 idx = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
  vec2 uv = vec2(float(idx.x) / 640.0, float(idx.y) / 480.0);
  imageStore(uTexture, idx, vec4(uv * 0.5 + 0.5, 0.0, 1.0));
}
