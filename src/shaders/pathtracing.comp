#version 450

layout(local_size_x = 1) in;

struct Intersection {
  float distance;
};

layout(std430, set = 0, binding = 0) readonly buffer buf {
    Intersection intersections[];
};

layout(set = 0, binding = 1, rgba16f) uniform writeonly image2D uTexture;

void main() {
  ivec2 idx = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
  vec2 uv = vec2(float(idx.x) / 640.0, float(idx.y) / 480.0);

  uint i = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * 640;
  vec4 color = vec4(uv * 0.5 + 0.5, 0.0, 1.0);
  if (intersections[i].distance > 0.0) {
    color.rgb = vec3(1.0, 0.0, 0.0);
  }

  imageStore(uTexture, idx, color);
}
